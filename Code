f = open("bioschemas-dump.ttl", "r")
lines1 = f.readlines()
f.close()
f = open("edam.owl.rdf", "r")
lines2 = f.readlines()
f.close()
##Topic:
L1=[]
L2=[]
L3=[]
L4=[]
L5=[]
L6=[]
for line in lines1:
    if line[30:40] == "edam:topic":
        info = line[35:45]
        if not info in L1 :
            L1.append(info)
    if line[8:18] == "edam:topic":
        info1 = line[13:23]
        if not info1 in L1 : 
            L1.append(info1)

for line in lines2:
    if line[33:38] == "topic":
        info4 = line[33:43]
        if not info4 in L3:
            L3.append(info4)

L1.sort()
L3.sort()

for topic in L3:
    if not topic in L1:
        L5.append(topic)

##Operation:

for li in lines1:
    if li[19:33] == "edam:operation":
        info2 = li[24:38]
        if not info2 in L2
            L2.append(info2)
    if li[8:22] == "edam:operation":
        info3 = li[13:27]
        if not info3 in L2 : 
            L2.append(info3)

for li in lines2:
    if li[33:42] == "operation":
        info5 = li[33:47]
        if not info5 in L4:
            L4.append(info5)
L2.sort()
L4.sort()

for operation in L4:
    if not operation in L2:
        L6.append(operation)
len(L6)
len(L4)
len(L2)
len(L5)
len(L3)
len(L1)

################

f = open("bioschemas-dump.ttl", "r")
lines1 = f.readlines()
f.close()
f = open("edam.owl.rdf", "r")
lines2 = f.readlines()
f.close()
 ##Topic: 
LL=[]
for line in lines1:
    if line[30:40] == "edam:topic":
        info = line[35:45]
        LL.append(info)
    if line[8:18] == "edam:topic":
        info1 = line[13:23]
        LL.append(info1)
LL.sort()
from collections import Counter
A=Counter(LL)
B = {k: v for k, v in sorted(A.items(), key= lambda v:v[1]) }
##Operation:
LP=[]
for li in lines1:
    if li[19:33] == "edam:operation":
        info2 = li[24:38]
        LP.append(info2)
    if li[8:22] == "edam:operation":
        info3 = li[13:27]
        LP.append(info3)
LP.sort()
from collections import Counter
C=Counter(LP)
D = {k: v for k, v in sorted(C.items(), key= lambda v:v[1]) }
E = {k: v for k, v in sorted(C.items(), key= lambda v:v[1], reverse = True) }
